x-shared-database-env: &shared-web-env
  # MySQL configuration
  POSTGRES_DATABASE: ${POSTGRES_DATABASE:-application_center}
  POSTGRES_USER: ${POSTGRES_USER:-application_center}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-application_center}

services:
  application-center:
    image: application-center:latest
    build:
        # dockerfile的寻找基于context上下文进行查找
        context: ../
        dockerfile: Dockerfile
    environment:
      # Django configuration
      DEBUG: FALSE
      SECRET_KEY: ${SECRET_KEY:-test-secret-key}

      # MySQL configuration
      POSTGRES_HOST: ${POSTGRES_HOST:-application-center-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      <<: *shared-web-env

      # Redis configuration
      REDIS_HOST: application-center-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
    ports:
      - "8080:8000"
    depends_on:
      application-center-db:
        condition: service_healthy
      application-center-redis:
        condition: service_healthy

  application-center-db:
    image: postgres:latest
    environment:
      <<: *shared-web-env
    ports:
        - "5437:5432"
    volumes:
      - ./volumes/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "application_center"]
      interval: 10s
      timeout: 5s
      retries: 3

  application-center-redis:
    image: redis:latest
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 3